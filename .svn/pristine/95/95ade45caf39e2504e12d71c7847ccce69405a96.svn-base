module.exports = function(webot) {
  var reg_help = /^(help|\?)$/i;
  webot.set({
    // name 和 description 都不是必须的
    name: 'info welcome',
    description: '欢迎信息',
    pattern: function(info) {
      //首次关注时,会收到subscribe event
      return info.is('event') && info.param.event === 'subscribe' || reg_help.test(info.text);
    },
    handler: function(info){
      var reply = {
        title: '感谢你收听懒人记账！',
        pic: 'http://lazyer.duapp.com/img/getqrcode.jpg',
        url: 'http://lazyer.duapp.com/',
        description: [
          "这里您可以实现文字记账功能并设定每日额度。",
          "文字输入格式：",
          "消费类别（1：餐饮，2：交通，3：日用）+",
          "价格 +",
          "详细信息+",
          "备注",
          "例如：1,20,午饭",
          "表示：餐饮+20元+午饭"
        ].join('\n')
      };
      // 返回值如果是list，则回复图文消息列表
      return reply;
    }
  });
  // 更简单地设置一条规则
  webot.set(/^more$/i, function(info){
    var reply = _.chain(webot.gets()).filter(function(rule){
      return rule.description;
    }).map(function(rule){
      //console.log(rule.name)
      return '> ' + rule.description;
    }).join('\n').value();
    
    return ['我的主人还没教我太多东西,你可以考虑帮我加下.\n可用的指令:\n'+ reply,
      '没有更多啦！当前可用指令：\n' + reply];
  });
  webot.set('mongodb', {
    description: '测试数据库',
    // pattern 既可以是函数，也可以是 regexp 或 字符串(模糊匹配)
    //pattern: '/^([1-3][,"，"]\d*((0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01])|(0[469]|11)-(0[1-9]|[12][0-9]|30)|02-(0[1-9]|[1][0-9]|2[0-8]))[,"，"]\w*)$/i',
    pattern: '/^\s*?[1-3]\s*?[,，]\s*?[0-9]*\s*?[,，]\s*?/i',
//    pattern:function(info){
//            var texts=info.text.split(/[,，]/);
//            return texts[0]==='1'||texts[0]==='2'||texts[0]==='3'&&texts[1];
//    },
    // 回复handler也可以直接是字符串或数组，如果是数组则随机返回一个子元素
    handler: function(info){
        var testMongo = require('../lib/mongo');
        var texts=info.text.split(/[,，]/),
            uid=info.uid,
            type=texts[0],
            price=texts[1],
            msg=texts[2];
        testMongo.save(uid,type,price,msg);
        return "记录成功！";
    }
  }); 
  require('js-yaml');
  webot.dialog(__dirname + '/dialog.yaml');
}